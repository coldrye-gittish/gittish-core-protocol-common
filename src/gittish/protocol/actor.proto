/*
 * Copyright 2017 Carsten Klein
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package gittish.protocol;

import "gittish/protocol/id.proto";
import "gittish/protocol/name.proto";


/**
 * The message Actor models an actor on whose behalf a given operation is to be
 * executed.
 *
 * Actors can be either individuals or organizations, both of which are
 * represented as actors of type ORGANIZATION.
 *
 * For internal use only, there is the SYSTEM actor.
 *
 * And, for anonymous (web) access to the data, there is also the ANONYMOUS
 * actor.
 */
message Actor {

  /**
   * TBD:DOCUMENT
   */
  enum Type {
    /**
     * The SYSTEM actor.
     */
    SYSTEM = 0;

    /**
     * The ANONYMOUS actor.
     */
    ANONYMOUS = 1;

    /**
     * The ORGANIZATION actor.
     */
    ORGANIZATION = 2;
  }

  /**
   * TBD:DOCUMENT
   */
  gittish.protocol.Actor.Type type = 1;

  /**
   * The id of the actor. For the system/anonymous actor this is left blank.
   */
  gittish.protocol.Id id = 2;

  /**
   * The name of the actor. For the system/anonymous actor this is left blank.
   */
  gittish.protocol.Name name = 3;
}

// vim: expandtab:ts=2:sw=2:
